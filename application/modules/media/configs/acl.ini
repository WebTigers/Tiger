;-------------------------------------------------------------------------------
; Media Manage Module
; You must namespace your module's bootstrap settings with your module name.
;-------------------------------------------------------------------------------
[production]

;-------------------------------------------------------------------------------
; ACL Resources
;-------------------------------------------------------------------------------
acl.resources.mediaControllerManage.module_name = Media
acl.resources.mediaControllerManage.resource_name = Media Controller Manage
acl.resources.mediaControllerManage.resource_description = Media Controller Manage
acl.resources.mediaControllerManage.resource = Media_Controller_Manage
acl.resources.mediaControllerManage.privilege = all

acl.resources.mediaControllerAdmin.module_name = Media
acl.resources.mediaControllerAdmin.resource_name = Media Controller Admin
acl.resources.mediaControllerAdmin.resource_description = Media Controller Admin
acl.resources.mediaControllerAdmin.resource = Media_Controller_Admin
acl.resources.mediaControllerAdmin.privilege = all

acl.resources.mediaServiceManage.module_name = Media
acl.resources.mediaServiceManage.resource_name = Media Service Media
acl.resources.mediaServiceManage.resource_description = Media Service Media
acl.resources.mediaServiceManage.resource = Media_Service_Media
acl.resources.mediaServiceManage.privilege = all


;-------------------------------------------------------------------------------
; ACL Roles
;-------------------------------------------------------------------------------
;acl.roles.grunt.role_name = grunt
;acl.roles.grunt.parent_role_name = guest ; can be null
;acl.roles.grunt.priority = 100 ; between 1 and 999


;-------------------------------------------------------------------------------
; ACL Rules
;-------------------------------------------------------------------------------
acl.rules.mediaControllerManage.priority = 100
acl.rules.mediaControllerManage.rule_name = Media Controller Manage
acl.rules.mediaControllerManage.rule_description = Media Controller Manage
acl.rules.mediaControllerManage.permission = allow
acl.rules.mediaControllerManage.resource = Media_Controller_Manage
acl.rules.mediaControllerManage.privilege = all
acl.rules.mediaControllerManage.assertion =
acl.rules.mediaControllerManage.role = manager

acl.rules.mediaControllerAdmin.priority = 100
acl.rules.mediaControllerAdmin.rule_name = Media Controller Admin
acl.rules.mediaControllerAdmin.rule_description = Media Controller Admin
acl.rules.mediaControllerAdmin.permission = allow
acl.rules.mediaControllerAdmin.resource = Media_Controller_Admin
acl.rules.mediaControllerAdmin.privilege = all
acl.rules.mediaControllerAdmin.assertion =
acl.rules.mediaControllerAdmin.role = superadmin

acl.rules.mediaServiceManage.priority = 100
acl.rules.mediaServiceManage.rule_name = Media Service Media
acl.rules.mediaServiceManage.rule_description = Media Service Media
acl.rules.mediaServiceManage.permission = allow
acl.rules.mediaServiceManage.resource = Media_Service_Media
acl.rules.mediaServiceManage.privilege = all
acl.rules.mediaServiceManage.assertion =
acl.rules.mediaServiceManage.role = manager

acl.rules.mediaServiceManageUploadConfigs.priority = 100
acl.rules.mediaServiceManageUploadConfigs.rule_name = Media Service Media
acl.rules.mediaServiceManageUploadConfigs.rule_description = Media Service Media
acl.rules.mediaServiceManageUploadConfigs.permission = allow
acl.rules.mediaServiceManageUploadConfigs.resource = Media_Service_Media
acl.rules.mediaServiceManageUploadConfigs.privilege = getUploaderConfigs
acl.rules.mediaServiceManageUploadConfigs.assertion =
acl.rules.mediaServiceManageUploadConfigs.role = user

acl.rules.mediaServiceManageGallery.priority = 100
acl.rules.mediaServiceManageGallery.rule_name = Media Service Media
acl.rules.mediaServiceManageGallery.rule_description = Media Service Media
acl.rules.mediaServiceManageGallery.permission = allow
acl.rules.mediaServiceManageGallery.resource = Media_Service_Media
acl.rules.mediaServiceManageGallery.privilege = getUserGallery
acl.rules.mediaServiceManageGallery.assertion =
acl.rules.mediaServiceManageGallery.role = user


[staging : production]


[testing : production]


[development : production]



